<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>request-param - Tag -</title><link>https://youngeun-in.github.io/tags/request-param/</link><description>request-param - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 20 Jan 2022 11:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/request-param/" rel="self" type="application/rss+xml"/><item><title>RequestBody, ModelAttribute, RequestParam 비교</title><link>https://youngeun-in.github.io/requestbody-modelattribute-requestparam-%EB%B9%84%EA%B5%90/</link><pubDate>Thu, 20 Jan 2022 11:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/requestbody-modelattribute-requestparam-%EB%B9%84%EA%B5%90/</guid><description>@RequestBody 클라이언트가 body에 JSON 또는 XML 형태로 값(보통 객체)을 담아 전송하면, body의 내용을 다시 Java Object(객체)로 변환해주는 역할을 수행한다. 이 데이터는 Spring에서 관리하는 MessageConverter들 중 하나인 Jackson2HttpMessageConverter를 통해 Java 객체로 변환된다. @Request Body 사용 시 DTO에 @NoArgsConstructor가 필요한 이유 RestController에서 @RequestBody의 바인딩은 Jackson라이브러리의 ObjectMapper가 해준다. ObjectMapper는 @RequestBody가 Property로 구현되어 있거나 생성을 위임한 경우가 아니라면 기본 생성자로 생성한다. 따라서 두 상황이 아니라면 기본 생성자는 꼭 필요하다. @Request Body에서는 Setter가 필요없는 이유 ObjectMapper는 Setter 또는 Getter로 DTO의 필드를 가져온다.</description></item></channel></rss>