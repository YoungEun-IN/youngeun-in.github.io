<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>generic - Tag -</title><link>https://youngeun-in.github.io/tags/generic/</link><description>generic - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 15 Mar 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/generic/" rel="self" type="application/rss+xml"/><item><title>자바 제네릭(Generics)</title><link>https://youngeun-in.github.io/%EC%9E%90%EB%B0%94-%EC%A0%9C%EB%84%A4%EB%A6%ADgenerics/</link><pubDate>Tue, 15 Mar 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/%EC%9E%90%EB%B0%94-%EC%A0%9C%EB%84%A4%EB%A6%ADgenerics/</guid><description>제네릭이란 JDK 1.5부터 도입한 클래스 내부에서 사용할 데이터 타입을 외부에서 지정하는 기법이다.
제네릭 필요성 : 타입 안전성 다음 예제를 보자.
1 2 3 4 5 6 7 public static void main(String[] args) { List numbers = Arrays.asList(1, 2, 3, 4, 5, 6); int sum = 0; for (Object number : numbers) { sum += (int) number; } } List에 있는 모든 숫자를 더하는 로직이다. List에 타입 지정을 안 했기 때문에 Object로 타입이 지정되고 더하는 부분에서 형 변환을 직접 해줘야 하는 번거로움이 있다.</description></item></channel></rss>