<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>docker - Tag -</title><link>https://youngeun-in.github.io/tags/docker/</link><description>docker - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 10 Apr 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/docker/" rel="self" type="application/rss+xml"/><item><title>VM vs 컨테이너</title><link>https://youngeun-in.github.io/vm-vs-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</link><pubDate>Sun, 10 Apr 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/vm-vs-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</guid><description>VM 하드웨어 인프라스트러처 위에 VMWare나 VirtualBox와 같은 HyperVisor 소프트웨어를 이용해서 각각의 가상의 머신을 만들 수 있다. 한 운영체제 위에서 동일한 어플리케이션을 각각의 고립된 다른 환경에서 구동하기 위해서는 가상 머신을 이용해서 어플리케이션을 구동해야 했다. 이 가상 머신은 각각의운영체제를 포함하고 있기 때문에 맥이라는 OS 위에서 가상머신을 이용하면 윈도와 리눅스를 동시에 구동할 수 있다.
고립된 환경에서 애플리케이션을 구동하기 위해서 VM을 사용하면 운영 체제를 포함하고 있기 때문에 굉장히 무겁고 그리고 시작하는 데도 오래 걸리고 또 컴퓨터 운영체제 인프라스트럭처 리소스를 많이 잡아먹는 범인이 될 수도 있다.</description></item></channel></rss>