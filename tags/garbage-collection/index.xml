<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>garbage-collection - Tag -</title><link>https://youngeun-in.github.io/tags/garbage-collection/</link><description>garbage-collection - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 01 Mar 2022 17:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/garbage-collection/" rel="self" type="application/rss+xml"/><item><title>Garbage Collection</title><link>https://youngeun-in.github.io/garbage-collection/</link><pubDate>Tue, 01 Mar 2022 17:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/garbage-collection/</guid><description>Garbage Collection Garbage Collection, GC는 JVM 상에서 더 이상 사용되지 않는 데이터가 할당되어있는 메모리를 해제시키는 작업이다. JVM에서 자동으로 동작하기 때문에 특별한 경우가 아니면 메모리 관리를 개발자가 직접 해줄 필요가 없다.
참조되고 있는지에 대한 개념을 reachability라고 하고, 유효한 참조를 reachable, 유효하지 않은 참조를 unreachable이라고 한다. Garbace Collector는 unreachable 한 객체들을 garbage라고 인식한다.
Heap 영역 내부의 객체들은 Method Area, Stack, Native Stack에서 참조되면 reachable로 판정된다. 이렇게 reachable로 인식되게 만들어주는 JVM Runtime Area들을 root set 이라고 한다.</description></item></channel></rss>