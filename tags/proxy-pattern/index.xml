<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>proxy-pattern - Tag -</title><link>https://youngeun-in.github.io/tags/proxy-pattern/</link><description>proxy-pattern - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 02 Feb 2024 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/proxy-pattern/" rel="self" type="application/rss+xml"/><item><title>프록시 패턴, 데코레이터 패턴</title><link>https://youngeun-in.github.io/%ED%94%84%EB%A1%9D%EC%8B%9C-%ED%8C%A8%ED%84%B4-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0-%ED%8C%A8%ED%84%B4/</link><pubDate>Fri, 02 Feb 2024 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/%ED%94%84%EB%A1%9D%EC%8B%9C-%ED%8C%A8%ED%84%B4-%EB%8D%B0%EC%BD%94%EB%A0%88%EC%9D%B4%ED%84%B0-%ED%8C%A8%ED%84%B4/</guid><description><![CDATA[프록시 패턴 1 2 3 4  package hello.proxy.pureproxy.proxy.code; public interface Subject { String operation(); }   예제에서 Subject 인터페이스는 단순히 operation() 메서드 하나만 가지고 있다.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20  package hello.proxy.pureproxy.proxy.code; import lombok.extern.slf4j.Slf4j; @Slf4j public class RealSubject implements Subject { @Override public String operation() { log.info(&#34;실제 객체 호출&#34;); sleep(1000); return &#34;data&#34;; } private void sleep(int millis) { try { Thread.]]></description></item></channel></rss>