<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>proxy - Tag -</title><link>https://youngeun-in.github.io/tags/proxy/</link><description>proxy - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 19 Feb 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/proxy/" rel="self" type="application/rss+xml"/><item><title>프록시 패턴</title><link>https://youngeun-in.github.io/proxy-pattern/</link><pubDate>Sat, 19 Feb 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/proxy-pattern/</guid><description>프록시 패턴 Proxy는 우리말로 대리자, 대변인 이라는 뜻이다. 대리자, 대변인은 다른 누군가를 대신해서 그 역할을 수행하는 존재를 말한다. 프록시는 타겟의 기능을 확장하거나 타깃에 대한 접근을 제어하기 위한 목적으로 사용된다.
상속을 사용한 구현 아래와 같은 타겟 클래스가 있다고 하자.
1 2 3 4 5 public class GameService { public void startGame() { System.out.println(&amp;#34;Hello&amp;#34;); } } 다음과 같이 프록시 클래스가 타겟 클래스를 상속받도록 만든다.
1 2 3 4 5 6 7 8 9 public class GameServiceProxy extends GameService { @Override public void startGame() { long before = System.</description></item></channel></rss>