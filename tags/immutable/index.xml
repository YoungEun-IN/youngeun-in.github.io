<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>immutable - Tag -</title><link>https://youngeun-in.github.io/tags/immutable/</link><description>immutable - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 15 Feb 2023 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/immutable/" rel="self" type="application/rss+xml"/><item><title>Java에서 String이 불변인 이유</title><link>https://youngeun-in.github.io/java%EC%97%90%EC%84%9C-string%EC%9D%B4-%EB%B6%88%EB%B3%80%EC%9D%B8-%EC%9D%B4%EC%9C%A0/</link><pubDate>Wed, 15 Feb 2023 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/java%EC%97%90%EC%84%9C-string%EC%9D%B4-%EB%B6%88%EB%B3%80%EC%9D%B8-%EC%9D%B4%EC%9C%A0/</guid><description>Java에서 String이 불변인 이유 String은 기본 타입(Primitive Type)이 아닌 참조 타입(Reference Type)이다. 즉, String은 클래스이다.
Java에서 String 객체를 리터럴로 선언하면 특별히 스택 메모리에 직접 저장되는 것이 아니라 Heap 영역 중에서 String constant pool이라는 곳에 메모리를 할당받아 거기에 값을 저장한다. 그리고 String 변수는 그 주소 값을 참조하게 된다. 따라서 Java에서 String은 불변성을 띄게 된다.
Java에서 String이 불변인 이유는 다음과 같다.
String pool을 통해 String을 관리함으로써 Java는 Runtime에서 Heap 영역의 많은 메모리를 절약할 수 있다.</description></item></channel></rss>