<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>dynamic-proxy - Tag -</title><link>https://youngeun-in.github.io/tags/dynamic-proxy/</link><description>dynamic-proxy - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 24 Feb 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/dynamic-proxy/" rel="self" type="application/rss+xml"/><item><title>AOP</title><link>https://youngeun-in.github.io/aop/</link><pubDate>Thu, 24 Feb 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/aop/</guid><description>📕 AOP Aspect-Oriented Programming | 관점 지향 프로그래밍
OOP 객체지향 프로그램 AOP 관점지향 프로그램 AOP는 OOP를 더욱 OOP답게 프로그래밍 할 수 있게 도와주는 것으로 애플리케이션의 핵심적인 기능과 부가적인 기능을 분리해 Aspect라는 모듈로 만들어 설계하고 개발하는 방법이다.
실제로 Spring doc document 에서는 아래와 같이 말하고 있다.
1 2 3 4 5 Aspect-oriented Programming (AOP) complements Object-oriented Programming (OOP) by providing another way of thinking about program structure AOP는 프로그램 구조에 대한 다른 생각의 방향을 제공해주면서 OOP를 보완하고 있다.</description></item></channel></rss>