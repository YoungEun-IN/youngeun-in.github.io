<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>async - Tag -</title><link>https://youngeun-in.github.io/tags/async/</link><description>async - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 29 Oct 2023 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/async/" rel="self" type="application/rss+xml"/><item><title>스프링 비동기</title><link>https://youngeun-in.github.io/%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%84%EB%8F%99%EA%B8%B0/</link><pubDate>Sun, 29 Oct 2023 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/%EC%8A%A4%ED%94%84%EB%A7%81-%EB%B9%84%EB%8F%99%EA%B8%B0/</guid><description>스프링 비동기 설정 @Async는 비동기적으로 처리를 할 수 있게끔 스프링에서 제공하는 어노테이션이다. 해당 어노테이션을 붙이게 되면 각기 다른 쓰레드로 실행이 된다. 즉, 호출자는 해당 메서드가 완료되는 것을 기다릴 필요가 없다.
이 어노테이션을 사용하기 위해서는 @EnableAsync 가 달려있는 configuration 클래스가 우선적으로 필요하다. @EnableAsync는 스프링의 @Async 어노테이션을 감지한다.
1 2 3 4 @Configuration @EnableAsync public class AsyncConfig { } 기본적으로, 스프링은 비동기적으로 메서드를 실행하기 위해서 SimpleAsyncTaskExecutor를 사용한다. SimpleAsyncTaskExecutor는 요청이 오는대로 계속해서 쓰레드를 생성하는 방식이다.</description></item><item><title>동기, 비동기, 블로킹, 논블로킹</title><link>https://youngeun-in.github.io/%EB%8F%99%EA%B8%B0-%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%B8%94%EB%A1%9C%ED%82%B9-%EB%85%BC%EB%B8%94%EB%A1%9C%ED%82%B9/</link><pubDate>Sat, 19 Mar 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/%EB%8F%99%EA%B8%B0-%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%B8%94%EB%A1%9C%ED%82%B9-%EB%85%BC%EB%B8%94%EB%A1%9C%ED%82%B9/</guid><description>동기(Synchronous), 비동기(Asynchronous), 블로킹(Blocking), 논블로킹(Non-blocking)은 프로그램의 제어 흐름과 작업 처리 방식에 관련된 개념이다.
동기, 비동기 동기/비동기는 작업을 시작한 후, 그 작업이 완료되기를 기다리는지 여부로 구분한다.
동기 개념: 작업을 요청한 후, 그 작업이 완료될 때까지 기다린 후 다음 작업을 수행하는 방식. 특징: 작업이 완료될 때까지 제어권을 반환받지 않음. 작업 순서가 중요하며, 순차적으로 실행됨. 예시 함수 호출 후 결과를 반환받을 때까지 기다림. 파일 I/O 작업을 요청하고, 작업이 완료될 때까지 기다림.</description></item></channel></rss>