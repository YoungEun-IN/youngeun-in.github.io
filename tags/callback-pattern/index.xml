<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>callback-pattern - Tag -</title><link>https://youngeun-in.github.io/tags/callback-pattern/</link><description>callback-pattern - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 01 Feb 2024 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/callback-pattern/" rel="self" type="application/rss+xml"/><item><title>템플릿 메서드 패턴 &amp; 전략 패턴 &amp; 콜백 패턴</title><link>https://youngeun-in.github.io/%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A9%94%EC%84%9C%EB%93%9C-%ED%8C%A8%ED%84%B4-%EC%A0%84%EB%9E%B5-%ED%8C%A8%ED%84%B4-%EC%BD%9C%EB%B0%B1-%ED%8C%A8%ED%84%B4/</link><pubDate>Thu, 01 Feb 2024 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/%ED%85%9C%ED%94%8C%EB%A6%BF-%EB%A9%94%EC%84%9C%EB%93%9C-%ED%8C%A8%ED%84%B4-%EC%A0%84%EB%9E%B5-%ED%8C%A8%ED%84%B4-%EC%BD%9C%EB%B0%B1-%ED%8C%A8%ED%84%B4/</guid><description>템플릿 메서드 패턴 템플릿은 기준이 되는 거대한 틀이다. 템플릿이라는 틀에 변하지 않는 부분을 몰아둔다. 그리고 일부 변하는 부분을 별도로 호출해서 해결한다.
템플릿 메서드 패턴은 부모 클래스에 알고리즘의 골격인 템플릿을 정의하고, 일부 변경되는 로직은 자식 클래스에 정의하는 것이다. 이렇게 하면 자식 클래스가 알고리즘의 전체 구조를 변경하지 않고, 특정 부분만 재정의할 수 있다. 결국 상속과 오버라이딩을 통한 다형성으로 문제를 해결하는 것이다.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 package hello.</description></item></channel></rss>