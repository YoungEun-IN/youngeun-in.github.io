<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>WebFlux - Tag -</title><link>https://youngeun-in.github.io/tags/webflux/</link><description>WebFlux - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 05 Mar 2024 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/webflux/" rel="self" type="application/rss+xml"/><item><title>WebFlux, WebClient</title><link>https://youngeun-in.github.io/webflux-webclient/</link><pubDate>Tue, 05 Mar 2024 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/webflux-webclient/</guid><description>리액터(Reactor) 리액터(Reactor)란 리액티브 프로그래밍을 위한 리액티브 라이브러리이다. Reactive Streams 스펙을 구현한 구현체 중 하나이다. Spring 에코 시스템에서 Reactive Stack의 기반이 되며 Spring WebFlux 프레임워크에 포함이 되어 있다.
Spring Webflux Spring Webflux란 Spring 5부터 지원하는 리액티브 웹 프레임워크이다. 비동기 Non-Blocking I/O 방식으로 적은 수의 쓰레드를 사용한다. Spring Webflux는 Reactive Streams의 구현체 중에 하나인 Reactor에 의존하여 비동기 로직을 구성하고 리액티브 스트림을 제공한다.
Spring Webflux는 Single-Thread와 Non-Blocking방식을 사용한다.
Blocking방식, Non-Blocking방식 Blocking방식이란 요청한 작업이 끝날때까지 다른 작업을 하지않고 끝날때까지 기다리는것이다.</description></item></channel></rss>