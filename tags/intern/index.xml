<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>intern() - Tag -</title><link>https://youngeun-in.github.io/tags/intern/</link><description>intern() - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 14 Feb 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/intern/" rel="self" type="application/rss+xml"/><item><title>Java에서 String을 초기화하는 방식</title><link>https://youngeun-in.github.io/java%EC%97%90%EC%84%9C-string%EC%9D%84-%EC%B4%88%EA%B8%B0%ED%99%94%ED%95%98%EB%8A%94-%EB%B0%A9%EC%8B%9D/</link><pubDate>Mon, 14 Feb 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/java%EC%97%90%EC%84%9C-string%EC%9D%84-%EC%B4%88%EA%B8%B0%ED%99%94%ED%95%98%EB%8A%94-%EB%B0%A9%EC%8B%9D/</guid><description><![CDATA[String의 초기화 방식 String 클래스의 경우 다른 참조 자료형과 달리 불변의 원칙이 적용되며, 참조 클래스 중 유일하게 + 연산을 수행할 수 있다.
Java에서 String을 생성하는 방식은 두가지가 있다.
 생성자를 이용하는 방법  String str = new String(&ldquo;Hello&rdquo;);   리터럴을 이용하는 방법  String str = &ldquo;Hello&rdquo;;    1 2 3 4 5 6 7  String a = &#34;apple&#34;; String b = new String(&#34;apple&#34;); String c = &#34;apple&#34;; String d = new String(&#34;apple&#34;); System.]]></description></item></channel></rss>