<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>node.js - Tag -</title><link>https://youngeun-in.github.io/tags/node.js/</link><description>node.js - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 17 Oct 2024 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/node.js/" rel="self" type="application/rss+xml"/><item><title>Node.js vs JVM 언어</title><link>https://youngeun-in.github.io/node.js-vs-jvm-%EC%96%B8%EC%96%B4/</link><pubDate>Thu, 17 Oct 2024 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/node.js-vs-jvm-%EC%96%B8%EC%96%B4/</guid><description>백엔드 아키텍처 전반적인 차이 ① API 서버 구조 관점 Node.js (비동기 이벤트 루프) JVM(Spring 등, 멀티스레드 기반) 요청 처리 방식 하나의 이벤트 루프가 요청을 받고, I/O가 완료되면 콜백을 실행 요청당 스레드 하나가 생성(혹은 스레드 풀에서 할당)되어 끝날 때까지 담당 I/O 처리 논블로킹 I/O (DB, 외부 API를 기다리지 않음) 블로킹 I/O (스레드가 대기) 주요 아키텍처 패턴 리액티브 (Reactive) / 이벤트 주도(Event-driven) MVC (Model-View-Controller) / 명령형(Imperative) 주요 프레임워크 Express, Fastify, NestJS Spring Boot, Micronaut, Quarkus 🧠 패러다임 차이 핵심:</description></item></channel></rss>