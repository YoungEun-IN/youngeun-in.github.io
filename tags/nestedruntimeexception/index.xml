<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>NestedRuntimeException - Tag -</title><link>https://youngeun-in.github.io/tags/nestedruntimeexception/</link><description>NestedRuntimeException - Tag -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 15 Oct 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/tags/nestedruntimeexception/" rel="self" type="application/rss+xml"/><item><title>RestClientException</title><link>https://youngeun-in.github.io/restclientexception/</link><pubDate>Sat, 15 Oct 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/restclientexception/</guid><description>NestedRuntimeException RuntimeException의 root cause를 다루기 쉽게 래핑한 예외 클래스
내부적으로는 NestedExceptionUtils 라는 유틸리티 클래스를 이용한다.
RestClientException 클라이언트 사이드의 HTTP 에러를 만났을 때 던져지는 기본 예외 클래스
RestClientResponseException 실제 HTTP 응답 데이터를 포함하고 있는 예외클래스들의 공통 기반 클래스
int rawStatusCode String statusText byte[] responseBody: getResponseBodyAsString() 메서드로 읽어올 수 있다. HttpHeaders responseHeaders String responseCharset HttpStatusCodeException HttpStatus (enum)를 기반으로 하여 만든 추상 클래스(RestClientResponseException의 경우 int 타입의 rawStatusCode를 가지고 있다.)
getStatusCode() 메서드를 통해 HttpStatus를 읽어올 수 있다.</description></item></channel></rss>