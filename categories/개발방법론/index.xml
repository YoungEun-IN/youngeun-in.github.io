<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>개발방법론 - Category -</title><link>https://youngeun-in.github.io/categories/%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/</link><description>개발방법론 - Category -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 19 Mar 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/categories/%EA%B0%9C%EB%B0%9C%EB%B0%A9%EB%B2%95%EB%A1%A0/" rel="self" type="application/rss+xml"/><item><title>블로킹, 논블로킹</title><link>https://youngeun-in.github.io/%EB%8F%99%EA%B8%B0-%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%B8%94%EB%A1%9C%ED%82%B9-%EB%85%BC%EB%B8%94%EB%A1%9C%ED%82%B9/</link><pubDate>Sat, 19 Mar 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/%EB%8F%99%EA%B8%B0-%EB%B9%84%EB%8F%99%EA%B8%B0-%EB%B8%94%EB%A1%9C%ED%82%B9-%EB%85%BC%EB%B8%94%EB%A1%9C%ED%82%B9/</guid><description>블로킹(Blocking), 논블로킹(Non-blocking)은 프로그램의 제어 흐름과 작업 처리 방식에 관련된 개념이다.
블로킹/논블로킹은 작업을 요청했을 때, 작업이 즉시 완료되지 않더라도 제어권을 넘겨주는지 여부로 구분한다.
블로킹(Blocking) 개념: 작업을 요청한 후, 그 작업이 완료될 때까지 제어권을 반환하지 않고 기다리는 방식. 특징 작업 스레드가 종료될 때가지 요청을 한 스레드는 차단된다. 이러한 단점을 보완하기 위해 멀티 쓰레딩 기법을 통해 추가 쓰레드를 할당할 수 있다. CPU 대비 많은 수의 쓰레드를 사용하는 것은 비효율적이다. 컨텍스트 스위칭으로 인한 쓰레드 전환 비용 발생 메모리 사용에 있어서 오버헤드 발생 쓰레드 풀에서의 응답 지연 문제 발생 예시 전통적인 파일 I/O나 네트워크 I/O 작업.</description></item><item><title>테스트 더블(Test Double)</title><link>https://youngeun-in.github.io/%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%8D%94%EB%B8%94test-double/</link><pubDate>Sat, 01 Jan 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/%ED%85%8C%EC%8A%A4%ED%8A%B8-%EB%8D%94%EB%B8%94test-double/</guid><description>테스트 더블(Test Double)이란 xUnit Test Patterns의 저자인 제라드 메스자로스(Gerard Meszaros)가 만든 용어로 테스트를 진행하기 어려운 경우 이를 대신해 테스트를 진행할 수 있도록 만들어주는 객체를 말한다. 테스트 더블이라는 용어는 영화 촬영 시 위험한 역할을 대신하는 스턴트 더블에서 비롯되었다.
예를 들어 우리가 데이터베이스로부터 조회한 값을 연산하는 로직을 구현했다고 하자. 해당 로직을 테스트하기 위해선 항상 데이터베이스의 영향을 받을 것이고, 이는 데이터베이스의 상태에 따라 다른 결과를 유발할 수도 있다.
이처럼 테스트하려는 객체와 연관된 객체를 사용하기가 어렵고 모호할 때 대신해 줄 수 있는 객체를 테스트 더블이라 한다.</description></item></channel></rss>