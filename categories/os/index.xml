<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>OS - Category -</title><link>https://youngeun-in.github.io/categories/os/</link><description>OS - Category -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 07 Jun 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/categories/os/" rel="self" type="application/rss+xml"/><item><title>IPC(Inter Process Communication)</title><link>https://youngeun-in.github.io/ipcinter-process-communication/</link><pubDate>Tue, 07 Jun 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/ipcinter-process-communication/</guid><description>프로세스는 독립적으로 실행된다. 즉, 독립 되어있다는 것은 다른 프로세스에게 영향을 받지 않는다고 말할 수 있다. (스레드는 프로세스 안에서 자원을 공유하므로 영향을 받는다)
이런 독립적 구조를 가진 프로세스 간의 통신을 해야 하는 상황이 있을 것이다. 이를 가능하도록 해주는 것이 바로 IPC 통신이다.
프로세스는 커널이 제공하는 IPC 설비를 이용해 프로세스간 통신을 할 수 있게 된다.
커널 커널은 메모리에 상주하는 부분으로써 운영체제의 핵심적인 부분을 뜻한다. IPC 종류 익명 PIPE 파이프는 두 개의 프로세스를 연결하는데 하나의 프로세스는 데이터를 쓰기만 하고, 다른 하나는 데이터를 읽기만 할 수 있다.</description></item></channel></rss>