<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>설계방법론 - Category -</title><link>https://youngeun-in.github.io/categories/%EC%84%A4%EA%B3%84%EB%B0%A9%EB%B2%95%EB%A1%A0/</link><description>설계방법론 - Category -</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 24 Feb 2022 15:12:26 +0900</lastBuildDate><atom:link href="https://youngeun-in.github.io/categories/%EC%84%A4%EA%B3%84%EB%B0%A9%EB%B2%95%EB%A1%A0/" rel="self" type="application/rss+xml"/><item><title>AOP</title><link>https://youngeun-in.github.io/aop/</link><pubDate>Thu, 24 Feb 2022 15:12:26 +0900</pubDate><author>Author</author><guid>https://youngeun-in.github.io/aop/</guid><description>AOP는 기능을 핵심 비즈니스 로직과 공통 모듈로 구분하고 핵심 로직에 영향을 미치지 않고 사이사이에 공통 모듈을 효과적으로 잘 끼워 넣어 중복성을 감소시킬 수 있는 개발 방법이다.
AOP 용어 용어 설명 Advice Joinpoint에서 실행되어야 하는 프로그램 코드
독립된 클래스의 메소드로 작성함
실질적으로 어떤 일을 해야할 지에 대한 것, 실질적인 부가기능을 담은 구현체
BEFORE, AROUND, AFTER의 실행 위치 지정 Joinpoint Advice를 적용할 수 있는 후보 지점 혹은 호출 이벤트</description></item></channel></rss>